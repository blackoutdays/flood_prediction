import pandas as pd
from prophet import Prophet

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
df = pd.read_excel("Data excel/–ê–∫—Ç–∞—É_final_cleaned.xlsx")
df['–î–∞—Ç–∞'] = pd.to_datetime(df['–î–∞—Ç–∞'])

# –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏
df['–ì–æ–¥'] = df['–î–∞—Ç–∞'].dt.year
df['–î–µ–Ω—å_–ú–µ—Å—è—Ü'] = df['–î–∞—Ç–∞'].dt.strftime('%m-%d')

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è
forecast_start_date = pd.to_datetime("2024-09-01")
forecast_end_date = pd.to_datetime("2025-09-01")
forecast_dates = pd.date_range(start=forecast_start_date, end=forecast_end_date, freq='D')

forecast_data = []

# –°—Ç–æ–ª–±—Ü—ã, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö —Å—á–∏—Ç–∞–µ–º —Å—Ä–µ–¥–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
columns_with_mean = ["–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å–∞–¥–∫–æ–≤, –º–º", "–°–æ—Å—Ç.–ø–æ–≤–µ—Ä –ø–æ—á–≤—ã, —à–∏—Ñ—Ä", "–°–Ω–µ–∂–Ω—ã–π –ø–æ–∫—Ä–æ–≤. –°—Ç.–ø–æ–∫—Ä.", "–°–Ω–µ–∂–Ω—ã–π –ø–æ–∫—Ä–æ–≤. –í—ã—Å–æ—Ç–∞, —Å–º"]

for date in forecast_dates:
    day_month = date.strftime('%m-%d')
    current_year = date.year

    # –í—ã–±–∏—Ä–∞–µ–º, –∑–∞ —Å–∫–æ–ª—å–∫–æ –ª–µ—Ç –±—Ä–∞—Ç—å –¥–∞–Ω–Ω—ã–µ (–∑–∞ 1-3 –≥–æ–¥–∞)
    if date.month in [9, 10]:
        historical_years = [current_year - 1, current_year - 2]
    else:
        historical_years = [current_year - 1, current_year - 2, current_year - 3]

    historical_data = df[(df['–î–µ–Ω—å_–ú–µ—Å—è—Ü'] == day_month) & (df['–ì–æ–¥'].isin(historical_years))]

    if not historical_data.empty:
        mean_values = historical_data.mean(numeric_only=True)
        mean_values['–î–∞—Ç–∞'] = date
        forecast_data.append(mean_values)

forecast_df = pd.DataFrame(forecast_data)
forecast_df = forecast_df.round(1)
forecast_df.drop(columns=['–ì–æ–¥'], inplace=True, errors='ignore')

# –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ä–µ–¥–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ Excel
forecast_df.to_excel("Data to AI/–ü—Ä–æ—Å—Ç–æ.xlsx", index=False)

# –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —á–µ—Ä–µ–∑ Prophet
numeric_columns = df.select_dtypes(include=['float64', 'int64']).columns
columns_for_prophet = [col for col in numeric_columns if col not in columns_with_mean]

all_forecasts = pd.DataFrame()

for column in numeric_columns:
    print(f"–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞: {column}")

    temp_df = df[[column]].reset_index().rename(columns={"–î–∞—Ç–∞": "ds", column: "y"})

    # üîπ –û—Ç–ª–∞–¥–∫–∞ –ø–µ—Ä–µ–¥ –æ–±—É—á–µ–Ω–∏–µ–º üîπ
    print(f"–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º—ã–π —Å—Ç–æ–ª–±–µ—Ü: {column}")
    print(temp_df.dtypes)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
    print(temp_df.head())  # –í—ã–≤–æ–¥ –ø–µ—Ä–≤—ã—Ö —Å—Ç—Ä–æ–∫

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ NaN
    print(temp_df.isnull().sum())

    # –ó–∞–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ–ø—É—Å–∫–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    temp_df["y"].fillna(temp_df["y"].mean(), inplace=True)

    model = Prophet()
    model.fit(temp_df)  # Prophet —Ç—Ä–µ–±—É–µ—Ç "ds" –∏ "y"


# –û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–≤–∞ –ø—Ä–æ–≥–Ω–æ–∑–∞ (—Å—Ä–µ–¥–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è + Prophet)
final_forecast = all_forecasts.merge(forecast_df, on="ds", how="outer")

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Ç–æ–≥–æ–≤—ã–π –ø—Ä–æ–≥–Ω–æ–∑
final_forecast.to_excel("Data to AI/—Ç–æ–ª—å–∫–æ_–ø—Ä–æ–≥–Ω–æ–∑—ã(2).xlsx", index=False)

# –í—ã–≤–æ–¥–∏–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
print(final_forecast.head())



